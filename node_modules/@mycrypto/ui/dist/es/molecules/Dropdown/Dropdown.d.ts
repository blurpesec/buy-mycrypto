import { ClassAttributes, Component, HTMLAttributes, ReactNode } from 'react';
import { ThemedOuterStyledProps } from 'styled-components';
import Omit from '../../Omit';
import Theme from '../../Theme';
export interface DropdownProps {
    items?: Set<ReactNode>;
    title?: ReactNode;
    value?: number;
    onChange?(value: number): void;
}
export declare class Dropdown extends Component<DropdownProps & Omit<ThemedOuterStyledProps<ClassAttributes<HTMLParagraphElement> & HTMLAttributes<HTMLParagraphElement> & {
    muted?: boolean;
    as?: string;
}, Theme>, 'ref'>, {
    height?: number;
    open: boolean;
    selected?: number;
    width?: number;
}> {
    state: {
        height: undefined;
        open: boolean;
        selected: undefined;
        width: undefined;
    };
    private readonly ref;
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private readonly handleClick;
    private readonly handleClickOutside;
    private readonly handleChange;
}
export default Dropdown;
//# sourceMappingURL=Dropdown.d.ts.map