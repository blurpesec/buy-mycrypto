import React, { ButtonHTMLAttributes, ClassAttributes, DetailedHTMLProps } from 'react';
import { StyledComponentClass, ThemedOuterStyledProps } from 'styled-components';
import Omit from '../../Omit';
import Theme from '../../Theme';
import { icons } from '../Icon';
export declare const BasicButton: StyledComponentClass<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, Theme, React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>>;
export interface StyledButtonProps {
    large?: boolean;
    secondary?: boolean;
}
export interface ButtonProps {
    basic?: boolean;
    icon?: keyof typeof icons;
}
export declare function Button({ basic, children, icon, ...rest }: ButtonProps & Omit<ThemedOuterStyledProps<DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> & ClassAttributes<HTMLButtonElement> & ButtonHTMLAttributes<HTMLButtonElement> & StyledButtonProps, Theme>, 'ref'>): JSX.Element;
export default Button;
//# sourceMappingURL=Button.d.ts.map